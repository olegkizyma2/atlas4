# ===================================
# ATLAS v4.0 - Environment Configuration
# ===================================
# Copy this file to .env and configure your settings

# === SYSTEM ===
NODE_ENV=production
BUILD_NUMBER=dev
LOG_LEVEL=info
FORCE_FREE_PORTS=true

# === AI BACKEND CONFIGURATION (NEW 13.10.2025) ===

# Backend mode: 'goose' | 'mcp' | 'hybrid'
# - goose: Use only Goose Desktop for all tasks
# - mcp: Use only MCP Direct (faster, no overhead)
# - hybrid: Auto-select based on task complexity (default)
AI_BACKEND_MODE=mcp

# Primary backend for task execution
AI_BACKEND_PRIMARY=mcp

# Fallback backend when primary fails
AI_BACKEND_FALLBACK=goose

# Disable fallback to Goose on MCP failures (strict mode)
# - true: System will throw errors on MCP failures (no fallback)
# - false: System will fallback to Goose on MCP failures (default, safe)
# НОВИНКА 13.10.2025 - Для тестування MCP без маскування помилок
# РЕКОМЕНДАЦІЯ: false для production, true для development
AI_BACKEND_DISABLE_FALLBACK=false

# === GOOSE DESKTOP ===
GOOSE_BIN=/Applications/Goose.app/Contents/MacOS/goose
GOOSE_DESKTOP_PATH=/Applications/Goose.app/Contents/MacOS/goose
GOOSE_SERVER_PORT=3000
GOOSE_PORT=3000
GOOSE_DISABLE_KEYRING=1
GITHUB_TOKEN=your_github_token_here

# === TTS & VOICE ===
REAL_TTS_MODE=true
TTS_DEVICE=mps
TTS_PORT=3001

# === WHISPER CONFIGURATION ===
WHISPER_BACKEND=cpp
WHISPER_DEVICE=metal
WHISPER_PORT=3002
WHISPER_CPP_BIN=/Users/dev/Documents/GitHub/atlas4/third_party/whisper.cpp.upstream/build/bin/whisper-cli
WHISPER_CPP_MODEL=/Users/dev/Documents/GitHub/atlas4/models/whisper/ggml-large-v3.bin
WHISPER_CPP_NGL=20
WHISPER_CPP_THREADS=10
WHISPER_CPP_DISABLE_GPU=false

# === NETWORK PORTS ===
ORCHESTRATOR_PORT=5101
WEB_PORT=5001
FRONTEND_PORT=5001

# === FEATURES ===
USE_METAL_GPU=true
