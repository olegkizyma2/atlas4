#!/bin/bash

# Test MCP Tools Array Fix - 14.10.2025
# –ü–µ—Ä–µ–≤—ñ—Ä—è—î —â–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞—Ü—é—î

echo "üîç Testing MCP Tools Array Fix..."
echo ""

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Test 1: Check prompts/package.json has type: module
echo "Test 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ prompts/package.json..."
if grep -q '"type": "module"' prompts/package.json; then
    echo -e "${GREEN}‚úÖ PASS${NC}: prompts/package.json –º–∞—î type: module"
else
    echo -e "${RED}‚ùå FAIL${NC}: prompts/package.json –ù–ï –º–∞—î type: module"
fi
echo ""

# Test 2: Check MCP Manager –º–∞—î Array.isArray –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
echo "Test 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Array.isArray() guards..."
if grep -q "Array.isArray(toolsData)" orchestrator/ai/mcp-manager.js; then
    echo -e "${GREEN}‚úÖ PASS${NC}: _handleMCPMessage –º–∞—î Array.isArray guard"
else
    echo -e "${RED}‚ùå FAIL${NC}: _handleMCPMessage –ë–ï–ó Array.isArray guard"
fi

if grep -q "Array.isArray(server.tools)" orchestrator/ai/mcp-manager.js; then
    echo -e "${GREEN}‚úÖ PASS${NC}: –Ü–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –º–∞—é—Ç—å Array.isArray guards"
else
    echo -e "${RED}‚ùå FAIL${NC}: –Ü–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –ë–ï–ó Array.isArray guards"
fi
echo ""

# Test 3: Check logs –ø—ñ—Å–ª—è restart (—è–∫—â–æ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞)
echo "Test 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤ (—è–∫—â–æ orchestrator –∑–∞–ø—É—â–µ–Ω–æ)..."
if [ -f logs/orchestrator.log ]; then
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î TypeError –∑ tools.some
    if grep -q "tools.some is not a function" logs/orchestrator.log | tail -50; then
        echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}: –í –ª–æ–≥–∞—Ö —î —Å—Ç–∞—Ä—ñ TypeError (–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–¥ —Ä–µ—Å—Ç–∞—Ä—Ç–æ–º)"
    else
        echo -e "${GREEN}‚úÖ PASS${NC}: –ù–µ–º–∞—î TypeError –∑ tools.some –≤ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ª–æ–≥–∞—Ö"
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î module warning
    if grep -q "MODULE_TYPELESS_PACKAGE_JSON" logs/orchestrator.log | tail -50; then
        echo -e "${YELLOW}‚ö†Ô∏è  WARNING${NC}: –í –ª–æ–≥–∞—Ö —î module warning (–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–¥ —Ä–µ—Å—Ç–∞—Ä—Ç–æ–º)"
    else
        echo -e "${GREEN}‚úÖ PASS${NC}: –ù–µ–º–∞—î module warnings –≤ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ª–æ–≥–∞—Ö"
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ tools —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è —è–∫ —á–∏—Å–ª–∞
    TOOLS_INIT=$(grep "Initialized with.*tools" logs/orchestrator.log | tail -5)
    if echo "$TOOLS_INIT" | grep -q "undefined tools"; then
        echo -e "${RED}‚ùå FAIL${NC}: MCP servers –º–∞—é—Ç—å undefined tools"
    else
        echo -e "${GREEN}‚úÖ PASS${NC}: MCP servers —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –∑ —á–∏—Å–ª–æ–≤–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ tools"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  SKIP${NC}: –õ–æ–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (orchestrator –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π?)"
fi
echo ""

# Summary
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "üìã SUMMARY"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "–í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ. –î–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:"
echo ""
echo "1. Restart orchestrator:"
echo "   ${YELLOW}./restart_system.sh restart${NC}"
echo ""
echo "2. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ MCP initialization:"
echo "   ${YELLOW}tail -f logs/orchestrator.log | grep 'MCP.*Initialized'${NC}"
echo ""
echo "3. Test TODO execution:"
echo "   ${YELLOW}curl -X POST http://localhost:5101/chat/stream \\${NC}"
echo "   ${YELLOW}  -H 'Content-Type: application/json' \\${NC}"
echo "   ${YELLOW}  -d '{\"message\": \"–≤—ñ–¥–∫—Ä–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\", \"sessionId\": \"test\"}'${NC}"
echo ""
echo "4. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —â–æ –Ω–µ–º–∞—î TypeError:"
echo "   ${YELLOW}grep 'tools.some is not a function' logs/orchestrator.log${NC}"
echo "   ${YELLOW}# –ú–∞—î –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ –ø—ñ—Å–ª—è —Ä–µ—Å—Ç–∞—Ä—Ç—É${NC}"
echo ""

# Documentation
echo "üìö –î–µ—Ç–∞–ª—å–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è:"
echo "   ${YELLOW}docs/MCP_TOOLS_ARRAY_FIX_2025-10-14.md${NC}"
echo ""
